/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --tw-font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --tw-font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --tw-color-black: #000;
    --tw-color-white: #fff;
    --tw-spacing: 0.25rem;
    --tw-container-3xl: 48rem;
    --tw-text-sm: 0.875rem;
    --tw-text-sm--line-height: calc(1.25 / 0.875);
    --tw-text-base: 1rem;
    --tw-text-base--line-height: calc(1.5 / 1);
    --tw-text-xl: 1.25rem;
    --tw-text-xl--line-height: calc(1.75 / 1.25);
    --tw-text-4xl: 2.25rem;
    --tw-text-4xl--line-height: calc(2.5 / 2.25);
    --tw-text-8xl: 6rem;
    --tw-text-8xl--line-height: 1;
    --tw-font-weight-bold: 700;
    --tw-radius-xl: 0.75rem;
    --tw-default-transition-duration: 150ms;
    --tw-default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --tw-default-font-family: var(--tw-font-sans);
    --tw-default-mono-font-family: var(--tw-font-mono);
    --tw-color-gray: #f9f9f9;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--tw-default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--tw-default-font-feature-settings, normal);
    font-variation-settings: var(--tw-default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--tw-default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--tw-default-mono-font-feature-settings, normal);
    font-variation-settings: var(--tw-default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .tw\:absolute {
    position: absolute;
  }
  .tw\:relative {
    position: relative;
  }
  .tw\:inset-0 {
    inset: calc(var(--tw-spacing) * 0);
  }
  .tw\:-z-1 {
    z-index: calc(1 * -1);
  }
  .tw\:z-0 {
    z-index: 0;
  }
  .tw\:container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .tw\:m-auto {
    margin: auto;
  }
  .tw\:mx-auto {
    margin-inline: auto;
  }
  .tw\:my-auto {
    margin-block: auto;
  }
  .tw\:mt-2 {
    margin-top: calc(var(--tw-spacing) * 2);
  }
  .tw\:mb-6 {
    margin-bottom: calc(var(--tw-spacing) * 6);
  }
  .tw\:flex {
    display: flex;
  }
  .tw\:grid {
    display: grid;
  }
  .tw\:h-auto {
    height: auto;
  }
  .tw\:h-full {
    height: 100%;
  }
  .tw\:h-full\! {
    height: 100% !important;
  }
  .tw\:w-3xl {
    width: var(--tw-container-3xl);
  }
  .tw\:w-32 {
    width: calc(var(--tw-spacing) * 32);
  }
  .tw\:w-48 {
    width: calc(var(--tw-spacing) * 48);
  }
  .tw\:w-full {
    width: 100%;
  }
  .tw\:w-full\! {
    width: 100% !important;
  }
  .tw\:grow {
    flex-grow: 1;
  }
  .tw\:columns-2 {
    columns: 2;
  }
  .tw\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .tw\:grid-cols-\[auto_1fr\] {
    grid-template-columns: auto 1fr;
  }
  .tw\:flex-wrap {
    flex-wrap: wrap;
  }
  .tw\:gap-6 {
    gap: calc(var(--tw-spacing) * 6);
  }
  .tw\:gap-8 {
    gap: calc(var(--tw-spacing) * 8);
  }
  .tw\:overflow-hidden {
    overflow: hidden;
  }
  .tw\:rounded-xl {
    border-radius: var(--tw-radius-xl);
  }
  .tw\:bg-black {
    background-color: var(--tw-color-black);
  }
  .tw\:bg-gray {
    background-color: var(--tw-color-gray);
  }
  .tw\:bg-transparent\! {
    background-color: transparent !important;
  }
  .tw\:bg-white {
    background-color: var(--tw-color-white);
  }
  .tw\:bg-\[linear-gradient\(to_bottom\,var\(--color-light\)_50\%\,var\(--tw-color-gray\)_50\%\)\] {
    background-image: linear-gradient(to bottom,var(--color-light) 50%,var(--tw-color-gray) 50%);
  }
  .tw\:object-cover {
    object-fit: cover;
  }
  .tw\:p-4 {
    padding: calc(var(--tw-spacing) * 4);
  }
  .tw\:p-8 {
    padding: calc(var(--tw-spacing) * 8);
  }
  .tw\:px-4 {
    padding-inline: calc(var(--tw-spacing) * 4);
  }
  .tw\:py-16 {
    padding-block: calc(var(--tw-spacing) * 16);
  }
  .tw\:pb-0 {
    padding-bottom: calc(var(--tw-spacing) * 0);
  }
  .tw\:pb-0\! {
    padding-bottom: calc(var(--tw-spacing) * 0) !important;
  }
  .tw\:text-center {
    text-align: center;
  }
  .tw\:text-4xl {
    font-size: var(--tw-text-4xl);
    line-height: var(--tw-leading, var(--tw-text-4xl--line-height));
  }
  .tw\:text-8xl {
    font-size: var(--tw-text-8xl);
    line-height: var(--tw-leading, var(--tw-text-8xl--line-height));
  }
  .tw\:text-base {
    font-size: var(--tw-text-base);
    line-height: var(--tw-leading, var(--tw-text-base--line-height));
  }
  .tw\:text-sm {
    font-size: var(--tw-text-sm);
    line-height: var(--tw-leading, var(--tw-text-sm--line-height));
  }
  .tw\:text-xl {
    font-size: var(--tw-text-xl);
    line-height: var(--tw-leading, var(--tw-text-xl--line-height));
  }
  .tw\:font-bold {
    --tw-font-weight: var(--tw-font-weight-bold);
    font-weight: var(--tw-font-weight-bold);
  }
  .tw\:text-white {
    color: var(--tw-color-white);
  }
  .tw\:opacity-0 {
    opacity: 0%;
  }
  .tw\:shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .tw\:transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--tw-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--tw-default-transition-duration));
  }
  .tw\:transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--tw-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--tw-default-transition-duration));
  }
  .tw\:transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--tw-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--tw-default-transition-duration));
  }
  .tw\:group-hover\:text-white {
    &:is(:where(.tw\:group):hover *) {
      @media (hover: hover) {
        color: var(--tw-color-white);
      }
    }
  }
  .tw\:group-hover\:text-white\! {
    &:is(:where(.tw\:group):hover *) {
      @media (hover: hover) {
        color: var(--tw-color-white) !important;
      }
    }
  }
  .tw\:group-hover\:opacity-100 {
    &:is(:where(.tw\:group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .tw\:hover\:text-white\! {
    &:hover {
      @media (hover: hover) {
        color: var(--tw-color-white) !important;
      }
    }
  }
  .tw\:hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .tw\:hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .tw\:hover\:shadow-none {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .tw\:md\:columns-2 {
    @media (width >= 48rem) {
      columns: 2;
    }
  }
  .tw\:md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .tw\:md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
